#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

stream {

	# stream里可以有多个upstream，不同的upstream代表不同的服务
	# 而不同的服务他们可能用的分别是tcp，udp，http，这里需要看怎么处理多个clusterName
	# 比如现在有user-service$udp和policy-service$http和product-service$tcp，它们又分别有2个实例
	# 那么应该是有个数组分别对应三个服务，然后三个服务实例内部又有instances数组对应服务实例；
	# 但是这里有个问题，如果是数组，本来是可以用<#list ...>的写法，但是由于这三个数组分别属于不同的大模块（stream/http）
	# 而<#list是要能连续输出的，所以这个方式不合适；
	# 所以应该是三个数组，即udp类型的服务数组，tcp类型的服务数组，http类型的服务数组，同一个类型的不同服务，比如还有order-service#tcp
	# 那么就可以用<#list upstreams as upstream>upstream ${upstream} { <#list servers as server>${server}</#list></#list>的写法
	upstream ${clusterName} {
		<#list servers as server>
		${server}
		</#list>
	}
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	tcp_nodelay on;

    #gzip  on;
	# 【重要，这里的cluster_name必须是一个可访问的ip或者是域名，它不是key的意思（是key，之前用cluster_servers这个key有下划线所以失败）；
	# 但经过测试用cluster_servers提示400，用mmm则可以，难道是下划线的原因？（对，确实是下划线的原因，真坑啊，一般不都应该支持下划线吗？反倒是-支持，不过最好也不要有指不定什么时候不支持了）
	upstream clusterservers {
		<#list servers as server>
		${server}
        </#list>
	}

    server {
		# 如果是80是可以省略的
        listen       80;
		# 这个配置可以不用，注意它描述的是nginx开启的server的server_name，即listen 80中的这个server，而不是upstream里的被代理服务的server_name
        server_name  clusterservers;

        charset utf-8;

        access_log  logs/cluster_servers.access.log  main;

        location / {
            proxy_pass http://clusterservers;
			# 开启健康检查
			# health_check;
        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}